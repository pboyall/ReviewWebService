{"version":3,"sources":["Database.js","index.js","TaskAssignment.js","TaskRepository.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["var exports = module.exports = {};\r\n\r\nvar Connection = require('tedious').Connection;\r\nvar Request = require('tedious').Request;\r\n\r\nvar config = {\r\n    userName: 'radmin',\r\n    password: 'password',\r\n    port: '1433',\r\n    server: 'PW-000011',\r\n    options: {\r\n        encrypt: false,\r\n        database: 'ReviewProject'\r\n    }\r\n};\r\n\r\nconsole.log('Get Connection');\r\n\r\nvar connection;\r\n\r\n//No checks on SQL - just a Proof of Concept this\r\n\r\nmodule.exports.query = function (sql, callback) {\r\n    console.log('Query SQL: ' + sql);\r\n    connection = new Connection(config);\r\n    console.log('got connection');\r\n    connection.on('connect', function (err) {\r\n        // If no error, then good to go...\r\n        console.log(\"Execute statement: \" + sql);\r\n        executeStatement(sql, callback);\r\n    });\r\n\r\n    connection.on('error', function (err) {\r\n        console.log(\"Error Connecting: \" + err);\r\n    });\r\n\r\n    connection.on('debug', function (text) {\r\n        console.log(\"Debug Connecting: \" + text);\r\n    });\r\n};\r\n\r\nfunction executeStatement(sql, callback) {\r\n    console.log('execute statement');\r\n    request = new Request(sql, function (err, rowCount) {\r\n        if (err) {\r\n            console.log(\"Request failed: \" + err);\r\n        } else {\r\n            console.log(rowCount + ' rows');\r\n            callback();\r\n        }\r\n\r\n    });\r\n\r\n    request.on('row', function (columns) {\r\n        columns.forEach(function (column) {\r\n            console.log('Row ' + column.value);\r\n        });\r\n    });\r\n\r\n    connection.execSql(request);\r\n    request.on('done', function () {\r\n        console.log('Database done');\r\n        callback();\r\n    });\r\n\r\n\r\n}","'use strict';\r\n\r\nconsole.log(\"Being Web Service\");\r\n\r\n\r\nvar database = require('./Database.js');\r\n\r\n//POC DB Query Code\r\n\r\nvar callme = function () {\r\n    console.log(\"Done - exit\");\r\n    process.exit();\r\n};\r\n\r\n/*\r\nvar sql = \"select * from task\";\r\n\r\ndatabase.query(sql, callme);\r\n\r\n//End POC\r\n\r\n*/\r\n\r\n//Initial Attempt at making a repository work\r\n\r\nvar taskRepository = require('./TaskRepository.js');\r\nvar taskAssignment = require('./TaskAssignment.js');\r\n\r\n//3 refers to WorkFlowProcessId = it's magic\r\n\r\nvar wibble = new taskRepository({\r\n    WorkflowProcessId: 3,\r\n    dbContext: database\r\n});\r\n\r\nvar _TaskId = 1;\r\nvar _DateAssigned = '15/1/2015';\r\nvar _GroupId = '1';\r\nvar _AccessType = 1;\r\nvar _NodeId = 1;\r\n\r\nvar theTaskAssignment = new taskAssignment({\r\n    TaskId: _TaskId,\r\n    DateAssigned: _DateAssigned,\r\n    GroupId: _GroupId,\r\n    AccessType: _AccessType,\r\n    NodeId: _NodeId\r\n});\r\n\r\nwibble.save(theTaskAssignment, callme);\r\n\r\n//As this is node, it keeps running unless we exit\r\n\r\nprocess.exit();","'use strict';\r\n\r\nvar taskAssignment = class TaskAssignment {\r\n\r\n    constructor(properties) {\r\n        this.TaskId = properties.TaskId;\r\n        this.DateAssigned = properties.DateAssigned;\r\n        this.GroupId = properties.GroupId;\r\n        this.AccessType = properties.AccessType;\r\n        this.NodeId = properties.NodeId;\r\n\r\n        var TableName = 'TaskAssignment';\r\n        //var Keys = {'TaskId', 'GroupId'};\r\n\r\n        //Is there a way to iterate the properties in a javascript object?  Never tried it.\r\n        //Maybe instead of unique properties we could have a dictionary object of name value pairs?\r\n        //Then we could have a generic class for all the tables\r\n        //Might be gettting carried away here\r\n\r\n        //var fields = {'DateAssigned','AccessType','NodeId'};\r\n\r\n        //sInsertSQL = 'Insert into ' . TableName . '(TaskId, GroupId, DateAssigned, AccessType, NodeId) Values (' . _TaskId . ',' . \r\n\r\n    }\r\n\r\n    /* If you define getters only, Node then decides you want read only properties.  If you define nothing, you get read/write properties ipso facto\r\n        get TaskId() {\r\n            return this.make;\r\n        }\r\n\r\n        get DateAssigned() {\r\n            return this.DateAssigned;\r\n        }\r\n        get GroupId() {\r\n            return this.GroupId;\r\n        }\r\n        get AccessType() {\r\n            return this.AccessType;\r\n        }\r\n        get NodeId() {\r\n            return this.NodeId;\r\n        }\r\n\r\n        set TaskId() {\r\n            return this.make;\r\n        }\r\n\r\n        set DateAssigned() {\r\n            return this.DateAssigned;\r\n        }\r\n        set GroupId() {\r\n            return this.GroupId;\r\n        }\r\n        set AccessType() {\r\n            return this.AccessType;\r\n        }\r\n        set NodeId() {\r\n            return this.NodeId;\r\n        }\r\n    */\r\n\r\n\r\n    toString() {\r\n        return '${this.TaskId} ${this.DataAssigned}';\r\n    }\r\n};\r\n\r\nmodule.exports = taskAssignment;","'use strict';\r\n\r\nvar taskRepository =\r\n\r\n    class TaskRepository {\r\n\r\n\r\n        constructor(Options) {\r\n            this.WorkflowProcessId = Options.WorkflowProcessId;\r\n            this.dbContext = Options.dbContext;\r\n        }\r\n\r\n        save(theObject, callme) {\r\n            //Hard coded SQL as proof of concept\r\n            //_dbContext\r\n            console.log('save');\r\n\r\n            console.log('instance of ')\r\n            console.log(Object.getPrototypeOf(theObject));\r\n\r\n            //switch statement here when have more than one class\r\n\r\n            var sql = \"select * from task\";\r\n            this.dbContext.query(sql, callme);\r\n        }\r\n\r\n    };\r\n\r\nmodule.exports = taskRepository;"],"sourceRoot":"/source/"}