{"version":3,"sources":["src/Model/ApprovalProcessTypes.js","src/Model/BranchCondition.js","src/Model/BranchNode.js","src/Model/GroupRoleRelation.js","src/Model/Task.js","src/Model/TaskAssignment.js","src/Model/TaskAssignmentHistory.js","src/Model/TaskNode.js","src/Model/UserGroup.js","src/library/stringfunctions.js","src/index.js","src/Initialise.js","src/MongoDatabase.js","src/SqlliteDatabase.js","src/TaskRepository.js","src/TediousDatabase.js","src/testtedious.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["'use strict';\r\n\r\nvar ApprovalProcessTypes = class ApprovalProcessTypes {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.ApprovalProcessId = properties.ApprovalProcessId;\r\n        this.StartNodeId = properties.StartNodeId;\r\n        this.ApprovalType = properties.ApprovalType;\r\n        this.CompanyId = properties.CompanyId;\r\n        this.FunctionId = properties.FunctionId;\r\n        this.ProductId = properties.ProductId;\r\n        this.RegionId = properties.RegionId;\r\n\r\n        this.TableName = 'ApprovalProcessTypes';\r\n        this.Keys = ['ApprovalProcessTypesId'];\r\n    }\r\n    toString() {\r\n        return '${this.ApprovalProcessId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"ApprovalProcessTypes\";\r\n    }\r\n};\r\n\r\nmodule.exports = ApprovalProcessTypes;","'use strict';\r\n\r\nvar BranchCondition = class BranchCondition {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.ConditionId = properties.ConditionId;\r\n        this.ConditionTest = properties.ConditionTest;\r\n        this.ConditionDescription = properties.ConditionDescription;\r\n        this.TableName = 'BranchCondition';\r\n        this.Keys = ['ConditionId'];\r\n    }\r\n    toString() {\r\n        return '${this.ConditionId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"BranchCondition\";\r\n    }\r\n};\r\n\r\nmodule.exports = BranchCondition;","'use strict';\r\n\r\nvar branchnode = class BranchNode {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.GuardId = properties.GuardId;\r\n        this.NodeId = properties.NodeId;\r\n        this.OutputNodeId = properties.OutputNodeId;\r\n        this.ConditionId = properties.ConditionId;\r\n        this.RelationTypeId = properties.RelationTypeId;\r\n        this.Type = properties.Type;\r\n        this.AccessType = properties.AccessType;\r\n        this.TableName = 'BranchNode';\r\n        this.Keys = ['GuardId'];\r\n    }\r\n    toString() {\r\n        return '${this.GuardId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"BranchNode\";\r\n    }\r\n};\r\n\r\nmodule.exports = branchnode;","'use strict';\r\n\r\nvar GroupRoleRelation = class GroupRoleRelation {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.GroupRelationId = properties.GroupRelationId;\r\n        this.MasterGroupId = properties.MasterGroupId;\r\n        this.RelativeGroupId = properties.RelativeGroupId;\r\n        this.DateUpdated = properties.DateUpdated;\r\n        this.Enabled = properties.Enabled;\r\n        this.RelationTypeId = properties.RelationTypeId;\r\n        this.StartDate = properties.StartDate;\r\n        this.EndDate = properties.EndDate;\r\n        this.ApprovalProcessId = properties.ApprovalProcessId;\r\n        this.GroupRoleWeight = properties.GroupRoleWeight;\r\n        this.TableName = 'GroupRoleRelation';\r\n        this.Keys = ['GroupRoleRelationId'];\r\n    }\r\n    toString() {\r\n        return '${this.GroupRelationId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"GroupRoleRelation\";\r\n    }\r\n};\r\n\r\nmodule.exports = GroupRoleRelation;","'use strict';\r\n\r\nvar task = class Task {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.TaskId = properties.TaskId;\r\n        this.DateUpdated = properties.DateAssigned;\r\n        this.Status = properties.Status;\r\n        this.RaiserUserId = properties.RaiserUserId;\r\n        this.ApprovalProcessType = properties.ApprovalProcessType;\r\n        this.TableName = 'Task';\r\n        this.Keys = ['TaskId'];\r\n    }\r\n    toString() {\r\n        return '${this.TaskId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"Task\";\r\n    }\r\n};\r\n\r\nmodule.exports = task;","'use strict';\r\n\r\nvar taskAssignment = class TaskAssignment {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.TaskId = properties.TaskId;\r\n        this.DateAssigned = properties.DateAssigned;\r\n        this.GroupId = properties.GroupId;\r\n        this.AccessType = properties.AccessType;\r\n        this.NodeId = properties.NodeId;\r\n\r\n        this.TableName = 'TaskAssignment';\r\n        this.Keys = ['TaskId', 'GroupId'];\r\n\r\n        //Maybe instead of unique properties we could have a dictionary object of name value pairs?\r\n        //Then we could have a generic class for all the tables\r\n        //Might be gettting carried away here\r\n\r\n        //var fields = {'DateAssigned','AccessType','NodeId'};\r\n\r\n        //sInsertSQL = 'Insert into ' . TableName . '(TaskId, GroupId, DateAssigned, AccessType, NodeId) Values (' . _TaskId . ',' . \r\n\r\n    }\r\n\r\n    /* If you define getters only, Node (javascript) then decides you want read only properties.  If you define nothing, you get read/write properties ipso facto do nothing.  Bonkers!\r\n        get TaskId() {\r\n            return this.make;\r\n        }\r\n\r\n        get DateAssigned() {\r\n            return this.DateAssigned;\r\n        }\r\n        get GroupId() {\r\n            return this.GroupId;\r\n        }\r\n        get AccessType() {\r\n            return this.AccessType;\r\n        }\r\n        get NodeId() {\r\n            return this.NodeId;\r\n        }\r\n\r\n        set TaskId() {\r\n            return this.make;\r\n        }\r\n\r\n        set DateAssigned() {\r\n            return this.DateAssigned;\r\n        }\r\n        set GroupId() {\r\n            return this.GroupId;\r\n        }\r\n        set AccessType() {\r\n            return this.AccessType;\r\n        }\r\n        set NodeId() {\r\n            return this.NodeId;\r\n        }\r\n    */\r\n\r\n\r\n    toString() {\r\n        return '${this.TaskId} ${this.DataAssigned}';\r\n    }\r\n\r\n    theType() {\r\n        return \"TaskAssignment\"; //Object.getPrototypeOf(this);\r\n    }\r\n};\r\n\r\nmodule.exports = taskAssignment;","'use strict';\r\n\r\nvar taskAssignmentHistory = class TaskAssignmentHistory {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.TaskId = properties.TaskId;\r\n        this.GroupId = properties.GroupId;\r\n        this.NodeId = properties.NodeId;\r\n        this.DateUpdated = properties.DateUpdated;\r\n        this.Outcome = properties.Outcome;\r\n        this.TaskAssignmentHistoryId = properties.TaskAssignmentHistoryId;\r\n        this.ApproverId = properties.ApproverId;\r\n        this.ConditionTest = properties.ConditionTest;\r\n\r\n        this.TableName = 'TaskAssignmentHistory';\r\n        this.Keys = ['TaskAssignmentHistoryId'];\r\n\r\n    }\r\n\r\n\r\n    toString() {\r\n        return '${this.TaskAssignmentHistoryId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"TaskAssignmentHistory\"; //Object.getPrototypeOf(this);\r\n    }\r\n};\r\n\r\nmodule.exports = taskAssignmentHistory;","'use strict';\r\n\r\nvar TaskNode = class TaskNode {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.TaskNodeId = properties.TaskNodeId;\r\n        this.TaskId = properties.TaskId;\r\n        this.NodeId = properties.NodeId;\r\n        this.DateUpdated = properties.DateUpdated;\r\n        this.GroupId = properties.GroupId;\r\n        this.TableName = 'TaskNode';\r\n        this.Keys = ['TaskNodeId'];\r\n    }\r\n    toString() {\r\n        return '${this.TaskNodeId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"TaskNode\";\r\n    }\r\n};\r\n\r\nmodule.exports = TaskNode;","'use strict';\r\n\r\nvar UserGroup = class UserGroup {\r\n\r\n    constructor(properties) {\r\n        this.Fields = properties;\r\n        this.GroupId = properties.GroupId;\r\n        this.PersonId = properties.PersonId;\r\n        this.DateUpdated = properties.DateUpdated;\r\n        this.Enabled = properties.Enabled;\r\n        this.StartDate = properties.StartDate;\r\n        this.EndDate = properties.EndDate;\r\n        this.TableName = 'UserGroup';\r\n        this.Keys = ['GroupId'];\r\n    }\r\n    toString() {\r\n        return '${this.GroupId} ';\r\n    }\r\n\r\n    theType() {\r\n        return \"UserGroup\";\r\n    }\r\n};\r\n\r\nmodule.exports = UserGroup;","'use strict';\r\n\r\nvar cString = class Cstring {\r\n\r\n    constructor(Options) {}\r\n\r\n    format(str, obj) {\r\n        return str.replace(/\\{\\s*([^}\\s]+)\\s*\\}/g, function (m, p1, offset, string) {\r\n            return obj[p1];\r\n        });\r\n    }\r\n\r\n    //Stick with {} for field names\r\n\r\n    formatfieldname(str, obj) {\r\n        return str.replace(/\\{\\s*([^}\\s]+)\\s*\\}/g, function (m, p1, offset, string) {\r\n            return obj[p1];\r\n        });\r\n    }\r\n\r\n    //Use [] to delineate field values\r\n    formatfieldvalue(str, obj) {\r\n        return str.replace(/\\[\\s*([^}\\s]+)\\s*\\]/g, function (m, p1, offset, string) {\r\n            return obj[p1];\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n};\r\n\r\nmodule.exports = cString;","/*'use strict';\r\n\r\nconsole.log(\"Begin Web Service\");\r\n//Sanity Kill\r\nprocess.on('uncaughtException', function (err) {\r\n    console.log('Uncaught Exception ' + err + ' , quitting');\r\n    process.exit(1);\r\n});\r\n\r\nvar database = require('sqlite.js');\r\n\r\n//POC DB Query Code\r\n\r\nvar callmeandquit = function () {\r\n    console.log(\"Done - exit\");\r\n    process.exit();\r\n};\r\n\r\nvar callme = function () {\r\n    console.log(\"Done - keep running\");\r\n};\r\n\r\n\r\nvar sql = \"select * from Task\";\r\n\r\n//database.\r\nConnectAndQuery(sql, callmeandquit);\r\n\r\n\r\n//database.query(sql, callme);\r\n\r\n//End POC\r\n\r\n\r\n\r\n//Initial Attempt at making a repository work\r\n\r\nvar taskRepository = require('./TaskRepository.js');\r\nvar taskAssignment = require('./TaskAssignment.js');\r\n\r\n//3 refers to WorkFlowProcessId = it's magic\r\n\r\nvar wibble = new taskRepository({\r\n    WorkflowProcessId: 3,\r\n    dbContext: database\r\n});\r\n\r\nvar _TaskId = 1;\r\nvar _DateAssigned = '15/1/2015';\r\nvar _GroupId = '1';\r\nvar _AccessType = 1;\r\nvar _NodeId = 1;\r\n\r\nvar theTaskAssignment = new taskAssignment({\r\n    TaskId: _TaskId,\r\n    DateAssigned: _DateAssigned,\r\n    GroupId: _GroupId,\r\n    AccessType: _AccessType,\r\n    NodeId: _NodeId\r\n});\r\n\r\nwibble.save(theTaskAssignment, callme);\r\n\r\n//As this is node, it keeps running unless we exit\r\n\r\nprocess.exit();\r\n\r\n\r\nvar express = require('express');\r\nvar app = express();\r\n\r\nconsole.log(\"Registering endpoint: /\");\r\napp.get('/', function (req, res) {\r\n    res.send('hello ROOT world');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /stubbed\");\r\napp.get('/stubbed', function (req, res) {\r\n    res.send('hello STUBBED');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /testing\");\r\napp.get('/testing', function (req, res) {\r\n    res.send('this is a test endpoint');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /jsonendpoint\");\r\napp.get('/jsonendpoint', function (req, res) {\r\n    res.json({\r\n        \"mykey\": \"myvalue\",\r\n        \"testy\": \"something\",\r\n        \"exnum\": 123\r\n    });\r\n});\r\n\r\napp.get('/data', function (req, res) {\r\n    db.get(\"SELECT value FROM counts\", function (err, row) {\r\n        res.json({\r\n            \"count\": row.value\r\n        });\r\n    });\r\n});\r\n\r\napp.post('/data', function (req, res) {\r\n    db.run(\"UPDATE counts SET value = value + 1 WHERE key = ?\", \"counter\", function (err, row) {\r\n        if (err) {\r\n            console.err(err);\r\n            res.status(500);\r\n        } else {\r\n            res.status(202);\r\n        }\r\n        res.end();\r\n    });\r\n});\r\n\r\n\r\napp.listen(3000);*/","","function insertIntoMongoDb() {\r\n    console.log('inserting data into MongDB');\r\n\r\n    mongoose.connect('mongodb://localhost:27017/someMongoDB');\r\n\r\n    var taskSchema = new mongoose.Schema({\r\n        TaskId: {\r\n            type: Number\r\n        },\r\n        Status: {\r\n            type: String\r\n        },\r\n        DateUpdated: {\r\n            type: Date\r\n        },\r\n        RaiserUserId: {\r\n            type: Number,\r\n            default: ''\r\n        },\r\n        ApprovalProcessType: {\r\n            type: Number,\r\n            default: 0\r\n        }\r\n    }, {\r\n        versionKey: false\r\n    });\r\n\r\n    var TaskModel = mongoose.model('Tasks', taskSchema);\r\n    for (var i = 0; i < rows.length; i++) {\r\n        var task = new TaskModel(rows[i]);\r\n        Task.save(function (error) {\r\n            if (error) {\r\n                console.log('error saving');\r\n            } else {\r\n                console.log('saved successfully')\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction getSqlData() {\r\n    console.log('Getting data from SQL');\r\n    request = new Request(\"SELECT * from Task\",\r\n        function (err, rowCount) {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                insertIntoMongoDb();\r\n            }\r\n        });\r\n    request.on('row', function (columns) {\r\n        var row = {};\r\n        columns.forEach(function (column) {\r\n            row[column.metadata.colName] = column.value;\r\n        });\r\n        rows.push(row);\r\n    });\r\n    connection.execSql(request);\r\n}","    var fs = require(\"fs\");\r\n    var file = \"reviewdb.db\";\r\n    var exists = fs.existsSync(file);\r\n    var sqlite3 = require(\"sqlite3\").verbose();\r\n    var sql = \"select * from Task\";\r\n\r\n    //Doesn't work globally\r\n\r\n    var database = function () {};\r\n\r\n    //Replace with connection pooling later\r\n\r\n    database.prototype.getConnection = function () {\r\n        var db = new sqlite3.Database(file);\r\n        return db;\r\n    }\r\n\r\n    database.prototype.ConnectAndQuery = function (sql, callback) {\r\n        var db = new sqlite3.Database(file);\r\n        console.log(\"Query SQL : \" + sql);\r\n        console.log(file);\r\n        db.serialize(function () {\r\n            db.each(sql, function (err, row) {\r\n                console.log(row.TaskId + \": \" + row.Status + \" : \" + row.RaiserUserId);\r\n            });\r\n        });\r\n        db.close();\r\n    }\r\n\r\n    module.exports = database;\r\n\r\n    //Full example    \r\n    /*    \r\n        var testfunc = function () {};\r\n\r\n        testfunc.prototype.log = function () {\r\n            console.log(\"test\"); //sql\r\n        };\r\n\r\n\r\n        //sql, callback\r\n        testfunc.prototype.log1 = function (sql, callback) {\r\n            console.log(sql); //sql\r\n        };\r\n\r\n        module.exports = testfunc;\r\n    */\r\n\r\n    function myfunc() {\r\n\r\n    }\r\n\r\n\r\n    //module.exports.ConnectAndQuery = func2;\r\n\r\n    //    var stmt = db.prepare(\"INSERT INTO Stuff VALUES (?)\");\r\n    //        stmt.run(\"Thing #\" + rnd);\r\n    //    stmt.finalize();\r\n    //        db.each(\"SELECT * FROM Task\", function (err, row) {\r\n    //            console.log(row.TaskId + \": \" + row.Status + \" : \" + row.RaiserUserId);\r\n\r\n    var complete = function (err, numrows) {\r\n        stmt.finalize();\r\n        db.close();\r\n        console.log(\"Complete\");\r\n\r\n    };\r\n\r\n    //Works globally\r\n    /*\r\n        foo = function () {\r\n            console.log(\"Boo\");\r\n        }\r\n    */\r\n\r\n    //Works in isolation\r\n    /*    exports.huh = function () {\r\n            console.log(\"Huh\");\r\n        }\r\n    */\r\n    /* works okay\r\n        var buz = function () {};\r\n\r\n        buz.prototype.bux = function () {\r\n            console.log(\"bux\");\r\n        }\r\n\r\n        module.exports = new buz();\r\n    */","'use strict';\r\nvar sprint = require('./library/stringfunctions.js');\r\n\r\nvar taskRepository =\r\n\r\n    class TaskRepository {\r\n\r\n        constructor(Options) {\r\n            this.WorkflowProcessId = Options.WorkflowProcessId;\r\n            this.dbContext = Options.dbContext;\r\n        }\r\n\r\n        wonk() {\r\n            console.log(\"javascript sucks big time\");\r\n        }\r\n\r\n        obtainSQL(theObject) {\r\n            var selectSQL = \"select \";\r\n            var updateSQL = \"update \" + theObject.TableName;\r\n            var insertSQL = \"insert into \" + theObject.TableName + \"(\";\r\n            var insertValues = \"\";\r\n            var insertFields = \"\";\r\n            var whereSQL = \"\";\r\n\r\n            for (var property in theObject.Fields) {\r\n                //Write out property name and value into SQL\r\n                if (selectSQL == \"select \") {\r\n                    updateSQL = updateSQL + \" SET \";\r\n\r\n                } else {\r\n                    selectSQL = selectSQL + \",\";\r\n                    updateSQL = updateSQL + \",\";\r\n                    insertValues = insertValues + \",\";\r\n                    insertFields = insertFields + \",\";\r\n                }\r\n                selectSQL = selectSQL + property;\r\n                updateSQL = updateSQL + property + \"= '\" + theObject.Fields[property] + \"'\";\r\n                insertValues = insertValues + \"'\" + theObject.Fields[property] + \"'\";\r\n                insertFields = insertFields + property;\r\n            }\r\n\r\n            selectSQL = selectSQL + \" from \" + theObject.TableName;\r\n            insertSQL = insertSQL + insertFields + \") VALUES (\" + insertValues + \")\";\r\n\r\n            theObject.Keys.map(function (item) {\r\n                if (whereSQL === \"\") {\r\n                    whereSQL = \" where \" + item + \" = \" + theObject[item];\r\n                } else {\r\n                    whereSQL = whereSQL + \" AND \" + item + \" = \" + theObject[item];\r\n                }\r\n\r\n            });\r\n\r\n            //Functionalise!\r\n\r\n            insertSQL = insertSQL + whereSQL;\r\n            updateSQL = updateSQL + whereSQL;\r\n            selectSQL = selectSQL + whereSQL;\r\n            return {\r\n                update: updateSQL,\r\n                select: selectSQL,\r\n                insert: insertSQL\r\n            };\r\n\r\n        }\r\n\r\n        load(theObject, callme) {\r\n            //Hard coded SQL as proof of concept\r\n            //_dbContext\r\n            var theType = theObject.theType();\r\n            console.log('+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=');\r\n            console.log('load instance of ' + Object.getPrototypeOf(theObject) + ' (' + theType + ')');\r\n            var sqlobj = this.obtainSQL(theObject);\r\n            var sql = sqlobj.select;\r\n            console.log(sql);\r\n            this.dbContext.ConnectAndQuery(sql, callme);\r\n        }\r\n\r\n\r\n\r\n        save(theObject, callme) {\r\n            //Hard coded SQL as proof of concept\r\n            console.log('+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=');\r\n            console.log('save instance of ' + Object.getPrototypeOf(theObject));\r\n            var sql = \"\";\r\n            var keys = [];\r\n            var sqlobj = this.obtainSQL(theObject);\r\n            //TODO: Code \"select\" check then if no rows insert else update\r\n            //For now just force insert each time\r\n            var sql = sqlobj.insert;\r\n            console.log(sql);\r\n            this.dbContext.ConnectAndQuery(sql, callme);\r\n            console.log('=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+');\r\n\r\n        }\r\n    };\r\n\r\nmodule.exports = taskRepository;","//Might want to make this implement the singleton pattern, although not totally sure it will hurt to have multiple instances floating around\r\n\r\nvar ConnectionPool = require('tedious-connection-pool');\r\nvar Connection = require('tedious').Connection;\r\nvar Request = require('tedious').Request;\r\nvar bDebug = true;\r\nvar poolConfig = {\r\n    min: 2,\r\n    max: 4,\r\n    log: true\r\n};\r\n\r\nvar config = {\r\n    userName: 'radmin',\r\n    password: 'password',\r\n    port: '1433',\r\n    server: 'PW-000011',\r\n    options: {\r\n        encrypt: false,\r\n        database: 'ReviewProject',\r\n        rowCollectionOnDone: true,\r\n        rowCollectionOnRequestCompletion: true,\r\n        useColumnNames: false\r\n    }\r\n};\r\n\r\nvar pooling = true; //Set to false to not use connection pooling\r\n\r\nvar connection;\r\nvar database = function () {};\r\n\r\n//No checks on SQL - just a Proof of Concept this\r\n//The idea of this function is to let us swap in connection pooling later\r\ndatabase.prototype.getConnection = function getConnection() {\r\n    connection = new Connection(config);\r\n    return connection;\r\n};\r\n\r\ndatabase.prototype.ConnectAndQuery = function ConnectAndQuery(sql, callback) {\r\n    console.log('Connect and Query SQL: ' + sql);\r\n    var thesql = sql;\r\n    if (!pooling) {\r\n        //Do a check here to see if connection already open\r\n        connection = this.getConnection();\r\n        connection.on('connect', function (err) {\r\n            // If no error, then good to go...\r\n            console.log(\"Conected - execute\" + sql);\r\n            executeStatement(sql, callback);\r\n        });\r\n\r\n        connection.on('error', function (err) {\r\n            console.log(\"Error Connecting: \" + err);\r\n        });\r\n\r\n        connection.on('debug', function (text) {\r\n            console.log(\"Debug Connecting: \" + text);\r\n        });\r\n    } else {\r\n        executePooledStatement(sql, callback);\r\n    }\r\n\r\n};\r\n\r\n//Internal Functions\r\n\r\n//Pooled querying - theoretically \r\n\r\nfunction executePooledStatement(sql, callback) {\r\n    console.log('execute pool');\r\n    var retval = '';\r\n    var rowcounter = 0;\r\n    var pool = new ConnectionPool(poolConfig, config);\r\n    pool.acquire(function (err, connection) {\r\n        if (err) {\r\n            console.error(err);\r\n        } else {\r\n            var request = new Request(sql, function (err, rowCount, rows) {\r\n                if (err) {\r\n                    console.log(\"Request failed: \" + err);\r\n                } else {\r\n                    console.log(rowCount + ' rows');\r\n                    connection.release();\r\n                }\r\n            });\r\n        }\r\n        request.on('row', function (columns) {\r\n            rowcounter++;\r\n            console.log('Row' + rowcounter);\r\n\r\n            var colval = \"\";\r\n            //if (bDebug) {\r\n            columns.forEach(function (column) {\r\n                //console.log('Col ' + column.metadata.colName + ' : ' + column.value);\r\n                if (colval.length > 0) {\r\n                    colval = colval + \",\";\r\n                }\r\n                colval = colval + column.metadata.colName + ' : ' + column.value;\r\n            });\r\n            if (retval.length > 0) {\r\n                retval = retval + \",\";\r\n            }\r\n            retval = retval + \"{\" + colval + \" }\";\r\n            //}\r\n        });\r\n\r\n        request.on('doneInProc', function (rowCount, more, rows) {\r\n            console.log('++++++++++++++++++++++++++++++++++++++++++++++++++++');\r\n            console.log('In Proc Database done');\r\n            console.log(retval);\r\n            console.log('Close connection');\r\n            connection.release();\r\n\r\n            callback(retval, rowCount);\r\n            console.log('-------------------------------------------------------');\r\n        });\r\n\r\n        connection.execSql(request);\r\n\r\n    });\r\n\r\n    pool.on('error', function (err) {\r\n        console.error(err);\r\n    });\r\n\r\n}\r\n\r\n//Non Pooled version - might be more reliable but the calling class has to use promises so only one at a time\r\n\r\nfunction executeStatement(sql, callback) {\r\n    console.log('execute statement');\r\n    var retval = '';\r\n    //Check state of connection\r\n    //if connect.s\r\n    var request = new Request(sql, function (err, rowCount, rows) {\r\n        if (err) {\r\n            console.log(\"Request failed: \" + err);\r\n        } else {\r\n            var rowarray = [];\r\n            console.log(rowCount + ' rows');\r\n            //connection.close();\r\n            connection.release();\r\n            //callback(rows);\r\n            //return rows;\r\n        }\r\n    });\r\n    var rowcounter = 0;\r\n    request.on('row', function (columns) {\r\n        rowcounter++;\r\n        console.log('Row' + rowcounter);\r\n\r\n        var colval = \"\";\r\n        //if (bDebug) {\r\n        columns.forEach(function (column) {\r\n            //console.log('Col ' + column.metadata.colName + ' : ' + column.value);\r\n            if (colval.length > 0) {\r\n                colval = colval + \",\";\r\n            }\r\n            colval = colval + column.metadata.colName + ' : ' + column.value;\r\n        });\r\n        if (retval.length > 0) {\r\n            retval = retval + \",\";\r\n        }\r\n        retval = retval + \"{\" + colval + \" }\";\r\n        //}\r\n    });\r\n    /*\r\n        request.on('done', function (rowCount, more, rows) {\r\n            console.log('Database done');\r\n            console.log('Total rows' + rowCount);\r\n            console.log(Object.getPrototypeOf(rows));\r\n            //callback(rows);\r\n\r\n        });\r\n    */\r\n    request.on('doneInProc', function (rowCount, more, rows) {\r\n        console.log('++++++++++++++++++++++++++++++++++++++++++++++++++++');\r\n        console.log('In Proc Database done');\r\n        //console.log('InProc Total rows' + rowCount);\r\n        //console.log(Object.getPrototypeOf(rows));\r\n        //console.log(rows);\r\n        console.log(retval);\r\n        //callback(rows, rowCount);\r\n        //Not sure if this should be wrapped in its own function to allow for connection pooling.\r\n        console.log('Close connection');\r\n        connection.close();\r\n\r\n        callback(retval, rowCount);\r\n        console.log('-------------------------------------------------------');\r\n    });\r\n    /*\r\n        request.on('doneProc', function (rowCount, more, rows) {\r\n            console.log('Proc Database done');\r\n            console.log('Proc Total rows' + rowCount);\r\n            console.log(Object.getPrototypeOf(rows));\r\n            callback(rows);\r\n\r\n        });\r\n    */\r\n    connection.execSql(request);\r\n}\r\n\r\nmodule.exports = database;","'use strict';\r\n//Database Handler (can plug in SqlliteDatabase.js instead)\r\nvar database = require('./TediousDatabase.js');\r\n//Does REST Web Services\r\nvar express = require('express');\r\nvar http = require('http');\r\nvar path = require('path');\r\nvar logger = require('morgan');\r\n\r\n//Initial Attempt at making a repository work\r\nvar taskRepository = require('./TaskRepository.js');\r\n\r\n//The classes that map to the database tables (one on one mapping)\r\n//Can do this with an index.js and just require the folder (so easy to add new classes) but for now code explicitly so it's more obvious\r\nvar taskAssignment = require('./Model/TaskAssignment.js');\r\nvar task = require('./Model/Task.js');\r\nvar ApprovalProcessTypes = require('./Model/ApprovalProcessTypes.js');\r\nvar BranchCondition = require('./Model/BranchCondition.js');\r\nvar branchnode = require('./Model/BranchNode.js');\r\nvar GroupRoleRelation = require('./Model/GroupRoleRelation.js');\r\nvar TaskNode = require('./Model/TaskNode.js');\r\nvar TaskAssignmentHistory = require('./Model/TaskAssignmentHistory.js');\r\nvar UserGroup = require('./Model/UserGroup.js');\r\n\r\n//Initialise Web Service Config\r\nvar app = express();\r\napp.use(logger('dev'));\r\nvar port = process.env.PORT || 3000;\r\nvar host = process.env.HOST || \"127.0.0.1\";\r\nconsole.log(\"Begin Web Service\");\r\n//Sanity Kill Method for entire Node Module\r\nprocess.on('uncaughtException', function (err) {\r\n    console.log('Uncaught Exception ' + err + ' , quitting');\r\n    process.exit(1);\r\n});\r\n\r\n//Create the database object to inject into everything\r\nvar db = new database();\r\n\r\n\r\nvar captureresults = function resultcap(rows, rowCount) {\r\n    console.log(\"Result Capture:\" + rowCount);\r\n    console.log(rows);\r\n    console.log(\"=====================================\");\r\n\r\n};\r\n\r\n//Run Checks to ensure database is up\r\nvar myf = function myfunc(rows, rowCount) {\r\n    console.log(\"Database connection varified\");\r\n    runRestOfServer();\r\n};\r\nconsole.log(\"****************************************************************\");\r\ndb.ConnectAndQuery(\"select * from Task\", myf);\r\n\r\n//3 refers to WorkFlowProcessId = it's magic\r\n\r\n\r\nvar runRestOfServer = function () {\r\n\r\n    var taskrepo = new taskRepository({\r\n        WorkflowProcessId: 3,\r\n        dbContext: db\r\n    });\r\n\r\n    var _TaskId = 1;\r\n    var _DateAssigned = '15/1/2015';\r\n    var _GroupId = '3';\r\n    var _AccessType = 1;\r\n    var _NodeId = 1;\r\n    var _DateUpdated = '16/2/2015';\r\n    var _Status = \"A\";\r\n    var _RaiserUserId = 1;\r\n    var _ApprovalType = 3;\r\n    var _StartNodeId = 1;\r\n    var _CompanyId = 1;\r\n    var _FunctionId = 1;\r\n    var _ProductId = 1;\r\n    var _RegionId = 1;\r\n    var _GuardId = 1;\r\n    var _ApprovalProcessId = 1;\r\n    var _ApprovalProcessType = 3;\r\n    var _ConditionId = 1;\r\n    var _ConditionTest = 1;\r\n    var _ConditionDescription = 1;\r\n    var _OutputNodeId = 1;\r\n    var _GroupRelationId = 1;\r\n    var _MasterGroupId = 1;\r\n    var _RelativeGroupId = 1;\r\n    var _Enabled = 1;\r\n    var _RelationTypeId = 1;\r\n    var _StartDate = '20/3/2015';\r\n    var _EndDate = '30/4/2015';\r\n    var _GroupRoleWeight = 1;\r\n    var _Type = 1;\r\n    var _Outcome = 1;\r\n    var _TaskAssignmentHistoryId = 1;\r\n    var _ApproverId = 1;\r\n    var _PersonId = 1;\r\n\r\n    var theTaskAssignment = new taskAssignment({\r\n        TaskId: _TaskId,\r\n        DateAssigned: _DateAssigned,\r\n        GroupId: _GroupId,\r\n        AccessType: _AccessType,\r\n        NodeId: _NodeId\r\n    });\r\n\r\n    var theTask = new task({\r\n        TaskId: _TaskId,\r\n        DateUpdated: _DateUpdated,\r\n        Status: _Status,\r\n        RaiserUserId: _RaiserUserId,\r\n        ApprovalProcessType: _ApprovalProcessType\r\n    });\r\n\r\n    var AP = new ApprovalProcessTypes({\r\n        ApprovalProcessId: _ApprovalProcessId,\r\n        StartNodeId: _StartNodeId,\r\n        ApprovalType: _ApprovalType,\r\n        CompanyId: _CompanyId,\r\n        FunctionId: _FunctionId,\r\n        ProductId: _ProductId,\r\n        RegionId: _RegionId\r\n    });\r\n\r\n    var BC = new BranchCondition({\r\n        ConditionId: _ConditionId,\r\n        ConditionTest: _ConditionTest,\r\n        ConditionDescription: _ConditionDescription\r\n    });\r\n\r\n    var BN = new ApprovalProcessTypes({\r\n        GuardId: _GuardId,\r\n        NodeId: _NodeId,\r\n        OutputNodeId: _OutputNodeId,\r\n        ConditionId: _ConditionId,\r\n        RelationTypeId: _RelationTypeId,\r\n        Type: _Type,\r\n        AccessType: _AccessType\r\n    });\r\n\r\n    var GR = new GroupRoleRelation({\r\n        GroupRelationId: _GroupRelationId,\r\n        MasterGroupId: _MasterGroupId,\r\n        RelativeGroupId: _RelativeGroupId,\r\n        DateUpdated: _DateUpdated,\r\n        Enabled: _Enabled,\r\n        RelationTypeId: _RelationTypeId,\r\n        StartDate: _StartDate,\r\n        EndDate: _EndDate,\r\n        ApprovalProcessId: _ApprovalProcessId,\r\n        GroupRoleWeight: _GroupRoleWeight\r\n    });\r\n\r\n    var theTaskAssignmentHistory = new TaskAssignmentHistory({\r\n        TaskId: _TaskId,\r\n        GroupId: _GroupId,\r\n        NodeId: _NodeId,\r\n        DateUpdated: _DateUpdated,\r\n        Outcome: _Outcome,\r\n        TaskAssignmentHistoryId: _TaskAssignmentHistoryId,\r\n        ApproverId: _ApproverId,\r\n        ConditionTest: _ConditionTest\r\n    });\r\n\r\n    var UG = new UserGroup({\r\n        GroupId: _GroupId,\r\n        PersonId: _PersonId,\r\n        DateUpdated: _DateUpdated,\r\n        Enabled: _Enabled,\r\n        StartDate: _StartDate,\r\n        EndDate: _EndDate\r\n    });\r\n\r\n    console.log(\"Date Task Assigned : \" + theTaskAssignment.DateAssigned);\r\n\r\n    taskrepo.load(theTaskAssignment, captureresults);\r\n\r\n    taskrepo.load(UG, captureresults);\r\n\r\n    //  taskrepo.save(theTaskAssignment, myf);\r\n};\r\n\r\n\r\n\r\n\r\n//Web Service Code\r\n\r\nconsole.log(\"Registering endpoint: /\");\r\napp.get('/', function (req, res) {\r\n    res.send('PW Review Process Web Service');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /Initialise\");\r\napp.get('/Initialise', function (req, res) {\r\n    res.send('Begin Review Process');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /End\");\r\napp.get('/End', function (req, res) {\r\n    res.send('End Review Process');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /Approve\");\r\napp.get('/Approve', function (req, res) {\r\n    res.send('Approved');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /Reject\");\r\napp.get('/Reject', function (req, res) {\r\n    res.send('Rejected');\r\n});\r\n\r\nconsole.log(\"Registering endpoint: /getTask\");\r\napp.get('/getTask', function (req, res) {\r\n    var sql = \"SELECT value, detail FROM counts\";\r\n    db.ConnectAndQuery(sql, function (err, row) {\r\n        res.json({\r\n            \"value\": row.value,\r\n            \"detail\": row.detail\r\n        });\r\n    });\r\n});\r\n\r\napp.post('/setTask', function (req, res) {\r\n    db.run(\"UPDATE counts SET value = value + 1 WHERE key = ?\", \"counter\", function (err, row) {\r\n        if (err) {\r\n            console.err(err);\r\n            res.status(500);\r\n        } else {\r\n            res.status(202);\r\n        }\r\n        res.end();\r\n    });\r\n});\r\n\r\nvar server = http.createServer(app).listen(port, host, function () {\r\n    console.log(\"Server listening to %s:%d within %s environment\",\r\n        host, port, app.get('env'));\r\n});\r\n\r\napp.listen(port);"],"sourceRoot":"/source/"}